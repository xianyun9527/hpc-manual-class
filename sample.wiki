= 一级标题 =

== 二级标题 ==

=== 一些例子(三级标题) ===

这是一个章节交叉引用的例子，可参考[[#一级标题|一级标题]]中的说明，还有一种更加简洁的写法指向[[#一级标题|一级标题]]。

下面是多层引用缩进的例子：

<blockquote>上海交通大学是我国历史最悠久、享誉海内外的高等学府之一。

<blockquote># 具体承办本校信息公开事宜；
# 管理、协调、维护和更新本校公开的信息；
</blockquote>
　在过去一年中，上海交通大学科技工作以提高科研管理与服务质量为工作主线。
</blockquote>
带有编号的列表环境：

# 其一，
# 其二，

无编号的列表环境：

* 首先，
** 展开表述，首先
** 其次,
* 其次，

定义列表：

<dl>
<dt>概念一</dt>
<dd><p>概念一的定义是。</p></dd>
<dt>概念二</dt>
<dd><p>概念二的定义是。</p>
<p>{print “Hello, world.”}</p>
<p>概念二定义结束。</p></dd></dl>

例子列表：

<ol style="list-style-type: example;">
<li>第一个例子名为good，编号为 (1).</li>
<li>第二个例子名为bad，编号为 (2).</li></ol>

正如例子 (1) 所说，我们用一条分割线结束本节。


-----

= 带有[http://www.google.com 超链接]的一级标题 =

== 表格和文本的例子 ==

=== 表格的例子 ===

最简单的带有题注的表格：

<table>
<caption>Demonstration of simple table syntax.</caption>
<thead>
<tr class="header">
<th align="right">Right</th>
<th align="left">Left</th>
<th align="center">Center</th>
<th align="left">Default</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="right">12</td>
<td align="left">12</td>
<td align="center">12</td>
<td align="left">12</td>
</tr>
<tr class="even">
<td align="right">123</td>
<td align="left">123</td>
<td align="center">123</td>
<td align="left">123</td>
</tr>
<tr class="odd">
<td align="right">1</td>
<td align="left">1</td>
<td align="center">1</td>
<td align="left">1</td>
</tr>
</tbody>
</table>

<table>
<caption>简单的表格例子(对中文表头的支持不是很完美)</caption>
<thead>
<tr class="header">
<th align="center">右对齐</th>
<th align="left">左对齐</th>
<th align="center">居中</th>
<th align="left">默认</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="center">12</td>
<td align="left">12</td>
<td align="center">12</td>
<td align="left">12</td>
</tr>
<tr class="even">
<td align="center">123</td>
<td align="left">123</td>
<td align="center">123</td>
<td align="left">123</td>
</tr>
<tr class="odd">
<td align="center">1</td>
<td align="left">1</td>
<td align="center">1</td>
<td align="left">1</td>
</tr>
</tbody>
</table>

更复杂的表格例子如下：

<table>
<caption>Here’s the caption. It, too, may span multiple lines.</caption>
<col width="16%" />
<col width="11%" />
<col width="22%" />
<col width="34%" />
<thead>
<tr class="header">
<th align="center">Centered Header</th>
<th align="left">Default Aligned</th>
<th align="right">Right Aligned</th>
<th align="left">Left Aligned</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="center">First</td>
<td align="left">row</td>
<td align="right">12.0</td>
<td align="left">Example of a row that spans multiple lines.</td>
</tr>
<tr class="even">
<td align="center">Second</td>
<td align="left">row</td>
<td align="right">5.0</td>
<td align="left">Here’s another one. Note the blank line between rows.</td>
</tr>
</tbody>
</table>

<table>
<caption>一个多行表格的例子</caption>
<col width="16%" />
<col width="11%" />
<col width="22%" />
<col width="34%" />
<thead>
<tr class="header">
<th align="center">居中的 表头</th>
<th align="center">默认</th>
<th align="center">右对齐</th>
<th align="left">左对齐</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="center">First</td>
<td align="center">row</td>
<td align="center">12.0</td>
<td align="left">Example of a row that spans multiple lines.</td>
</tr>
<tr class="even">
<td align="center">Second</td>
<td align="center">row</td>
<td align="center">5.0</td>
<td align="left">Here’s another one. Note the blank line between rows.</td>
</tr>
</tbody>
</table>

<table>
<caption>Sample grid table.</caption>
<col width="22%" />
<col width="22%" />
<col width="29%" />
<thead>
<tr class="header">
<th align="left">Fruit</th>
<th align="left">Price</th>
<th align="left">Advantages</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="left">Bananas
</td>
<td align="left">$1.34
</td>
<td align="left">* built-in wrapper
* bright color
</td>
</tr>
<tr class="even">
<td align="left">Oranges
</td>
<td align="left">$2.10
</td>
<td align="left">* cures scurvy
* tasty
</td>
</tr>
</tbody>
</table>

<table>
<caption>在源文件中使用网格线绘制的表格(表格标题在表格之前)</caption>
<col width="22%" />
<col width="22%" />
<col width="29%" />
<thead>
<tr class="header">
<th align="left">水果</th>
<th align="left">价格</th>
<th align="left">特点</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="left">Bananas
</td>
<td align="left">$1.34
</td>
<td align="left">* built-in wrapper
* bright color
</td>
</tr>
<tr class="even">
<td align="left">Oranges
</td>
<td align="left">$2.10
</td>
<td align="left">* cures scurvy
* tasty
</td>
</tr>
</tbody>
</table>

<table>
<caption>Demonstration of simple table syntax.</caption>
<thead>
<tr class="header">
<th align="right">Right</th>
<th align="left">Left</th>
<th align="left">Default</th>
<th align="center">Center</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="right">12</td>
<td align="left">12</td>
<td align="left">12</td>
<td align="center">12</td>
</tr>
<tr class="even">
<td align="right">123</td>
<td align="left">123</td>
<td align="left">123</td>
<td align="center">123</td>
</tr>
<tr class="odd">
<td align="right">1</td>
<td align="left">1</td>
<td align="left">1</td>
<td align="center">1</td>
</tr>
</tbody>
</table>

<table>
<caption>在源文件中使用管道分隔符绘制的表格</caption>
<thead>
<tr class="header">
<th align="right">右对齐</th>
<th align="left">左对齐</th>
<th align="left">默认</th>
<th align="center">居中</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="right">12</td>
<td align="left">12</td>
<td align="left">12</td>
<td align="center">12</td>
</tr>
<tr class="even">
<td align="right">123</td>
<td align="left">123</td>
<td align="left">123</td>
<td align="center">123</td>
</tr>
<tr class="odd">
<td align="right">1</td>
<td align="left">1</td>
<td align="left">1</td>
<td align="center">1</td>
</tr>
</tbody>
</table>

=== 文本修饰 ===

''强调''，'''再强调'''。原样输出<code>&gt;&gt;==</code>和<code>&gt;&gt;</code>，也可以用少一些的符号<code>==</code>。

=== 注释 ===

将需要注释的内容用<code>&lt;!--</code>和<code>--&gt;</code>包围，如下所示。

<pre>&lt;!-- 这段内容，需要注释 --&gt;</pre>
=== 插入代码 ===

一段C代码：

<pre>/* Hello World program */

#include&lt;stdio.h&gt;

main()
{
    printf(&quot;Hello World&quot;);
}</pre>
VLAN和IP信息：

<pre>X650# show vlan
---------------------------------------------------------------------------------
Name            VID  Protocol Addr       Flags           Proto  Ports  Virtual   
                                                                Active router
                                                                /Total
---------------------------------------------------------------------------------
Default         1    --------------------------------T-- ANY    9 /18  VR-Default 
Mgmt            4095 ----------------------------------- ANY    0 /1   VR-Mgmt    
-----------------------------------------------------------------------------------
Flags : (B) BFD Enabled, (c) 802.1ad customer VLAN, (C) EAPS Control VLAN,
        (d) NetLogin Dynamically created VLAN, (D) VLAN Admin Disabled,
        (e) CES Configured, (E) ESRP Enabled, (f) IP Forwarding Enabled,
        (F) Learning Disabled, (i) ISIS Enabled, (I) Inter-Switch Connection VLAN for MLAG,
        (k) PTP Configured, (l) MPLS Enabled, (L) Loopback Enabled,
        (m) IPmc Forwarding Enabled, (M) Translation Member VLAN or Subscriber VLAN,
        (n) IP Multinetting Enabled, (N) Network Login VLAN, (o) OSPF Enabled,
        (O) Flooding Disabled, (p) PIM Enabled, (P) EAPS protected VLAN,
        (r) RIP Enabled, (R) Sub-VLAN IP Range Configured,
        (s) Sub-VLAN, (S) Super-VLAN, (t) Translation VLAN or Network VLAN,
        (T) Member of STP Domain, (v) VRRP Enabled, (V) VPLS Enabled, (W) VPWS Enabled

Total number of VLAN(s) : 5</pre>
链路聚合信息：

<pre>X650# show sharing 
Load Sharing Monitor
Config    Current    Agg       Ld Share    Ld Share  Agg   Link    Link Up
Master    Master     Control   Algorithm   Group     Mbr   State   Transitions
==============================================================================
    17     17        Static    L2          17         Y      A        1
                               L2          18         Y      A        1
==============================================================================
Link State: A-Active, D-Disabled, R-Ready, NP-Port not present, L-Loopback
Load Sharing Algorithm: (L2) Layer 2 address based, (L3) Layer 3 address based
                        (L3_L4) Layer 3 address and Layer 4 port based
                        (custom) User-selected address-based configuration
Custom Algorithm Configuration: ipv4 L3-and-L4, xor
Number of load sharing trunks: 9</pre>
最后，保存配置信息。

<pre>X650# save  </pre>
=== 一段来自终端的代码 ===

<pre>$ping 8.8.8.8 
PING 8.8.8.8 (8.8.8.8): 56 data bytes
64 bytes from 8.8.8.8: icmp_seq=0 ttl=49 time=214.782 ms
64 bytes from 8.8.8.8: icmp_seq=1 ttl=49 time=214.832 ms
64 bytes from 8.8.8.8: icmp_seq=2 ttl=49 time=215.212 ms
64 bytes from 8.8.8.8: icmp_seq=3 ttl=49 time=215.320 ms
^C
--- 8.8.8.8 ping statistics ---
4 packets transmitted, 4 packets received, 0.0% packet loss
round-trip min/avg/max/stddev = 214.782/215.036/215.320/0.233 ms</pre>
=== 超链接和自动链接 ===

一个典型的[http://www.google.com 链接]，和自动生成的链接[mailto:weijianwen@gmail.com weijianwen@gmail.com]。

=== 图片和脚注的例子 ===

Pandoc目前还不支持缩放图片，所以图片必须预先处理好<ref>相关讨论见 http://code.google.com/p/pandoc/wiki/ImageSizes
</ref>。

[[Image:./twitter.png|frame|none|alt=|caption 插入PNG图片的例子]]

这里给一个脚注的例子<ref>这里可以添加包含多行说明的脚注。
</ref>。

= 无编号的参考资料 =

* “Pandoc User’s Guide” http://johnmacfarlane.net/pandoc/README.html

<references />
